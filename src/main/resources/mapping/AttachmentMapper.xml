<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="bingosoft.hrhelper.mapper.AttachmentMapper" >
  <resultMap id="BaseResultMap" type="bingosoft.hrhelper.model.Attachment" >
    <id column="attachment_id" property="attachmentId" jdbcType="CHAR" />
    <result column="attachment_name" property="attachmentName" jdbcType="VARCHAR" />
    <result column="attachment_path" property="attachmentPath" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="rule_id" property="ruleId" jdbcType="CHAR" />
    <result column="mail_id" property="mailId" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    attachment_id, attachment_name, attachment_path, create_by, create_time, rule_id, 
    mail_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from attachment
    where attachment_id = #{attachmentId,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from attachment
    where attachment_id = #{attachmentId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="bingosoft.hrhelper.model.Attachment" >
    insert into attachment (attachment_id, attachment_name, attachment_path, 
      create_by, create_time, rule_id, 
      mail_id)
    values (#{attachmentId,jdbcType=CHAR}, #{attachmentName,jdbcType=VARCHAR}, #{attachmentPath,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{ruleId,jdbcType=CHAR}, 
      #{mailId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="bingosoft.hrhelper.model.Attachment" >
    insert into attachment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="attachmentId != null" >
        attachment_id,
      </if>
      <if test="attachmentName != null" >
        attachment_name,
      </if>
      <if test="attachmentPath != null" >
        attachment_path,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="ruleId != null" >
        rule_id,
      </if>
      <if test="mailId != null" >
        mail_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="attachmentId != null" >
        #{attachmentId,jdbcType=CHAR},
      </if>
      <if test="attachmentName != null" >
        #{attachmentName,jdbcType=VARCHAR},
      </if>
      <if test="attachmentPath != null" >
        #{attachmentPath,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ruleId != null" >
        #{ruleId,jdbcType=CHAR},
      </if>
      <if test="mailId != null" >
        #{mailId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="bingosoft.hrhelper.model.Attachment" >
    update attachment
    <set >
      <if test="attachmentName != null" >
        attachment_name = #{attachmentName,jdbcType=VARCHAR},
      </if>
      <if test="attachmentPath != null" >
        attachment_path = #{attachmentPath,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ruleId != null" >
        rule_id = #{ruleId,jdbcType=CHAR},
      </if>
      <if test="mailId != null" >
        mail_id = #{mailId,jdbcType=CHAR},
      </if>
    </set>
    where attachment_id = #{attachmentId,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="bingosoft.hrhelper.model.Attachment" >
    update attachment
    set attachment_name = #{attachmentName,jdbcType=VARCHAR},
      attachment_path = #{attachmentPath,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      rule_id = #{ruleId,jdbcType=CHAR},
      mail_id = #{mailId,jdbcType=CHAR}
    where attachment_id = #{attachmentId,jdbcType=CHAR}
  </update>

  <!--  自定义开始  -->

  <!-- 根据邮件id或规则id获取附件 -->
  <select id="listAttachment" resultMap="BaseResultMap">
    SELECT attachment_id, attachment_name ,attachment_path ,create_bycreate_time
    FROM attachment
    <choose>
      <when test="type=='mail'.toString()">
        WHERE mail_id = #{id}
      </when>
      <otherwise>
        WHERE rule_id = #{id}
      </otherwise>
    </choose>
  </select>

  <!--  自定义代码结束  -->
</mapper>